server {
    listen 80;
    server_name localhost;

    # Default root for the server is the frontend build
    root /usr/share/nginx/html;
    index index.html;

    # Handle frontend routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Forward API requests to Laravel (php-fpm)
    location /api {
        # Always route to Laravel's front controller
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
        fastcgi_param SCRIPT_NAME /index.php;
        fastcgi_param PATH_INFO "";
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_URI $request_uri;
        # Forward common HTTP headers used by Laravel for JSON detection and auth
        fastcgi_param HTTP_HOST $host;
        fastcgi_param HTTP_ACCEPT $http_accept;
        fastcgi_param HTTP_CONTENT_TYPE $http_content_type;
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_param HTTP_X_REQUESTED_WITH $http_x_requested_with;
        fastcgi_pass backend:9000;
    }

    # Process all PHP files through the backend service
    location ~ \.php$ {
        # Do not check local file existence (files live in backend)
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
        # Pass the request to the PHP-FPM server
        fastcgi_pass backend:9000;
        
        # Standard FastCGI parameters
        fastcgi_index index.php;
        include fastcgi_params;
        
        # This tells PHP-FPM where the script is located inside the backend container
        fastcgi_param SCRIPT_FILENAME /var/www/public$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        # Forward headers consistently for PHP locations too
        fastcgi_param HTTP_HOST $host;
        fastcgi_param HTTP_ACCEPT $http_accept;
        fastcgi_param HTTP_CONTENT_TYPE $http_content_type;
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_param HTTP_X_REQUESTED_WITH $http_x_requested_with;
    }
}
